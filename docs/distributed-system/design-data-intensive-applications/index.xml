<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>What&#39;s Behind</title>
    <link>https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/</link>
    <description>Recent content on What&#39;s Behind</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Replication</title>
      <link>https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/replication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/replication/</guid>
      <description>&lt;h1 id=&#34;definition&#34;&gt;&#xA;  Definition&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#definition&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Replication means keeping a copy of the same data on multiple machines that are connected via a network.&lt;/p&gt;&#xA;&lt;h2 id=&#34;advantages-of-replication&#34;&gt;&#xA;  Advantages of Replication&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#advantages-of-replication&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reduce Latency&lt;/strong&gt;: To keep data geographically close to your users&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Increase Availability&lt;/strong&gt;: To allow the system to continue working even if some of its parts have failed&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Increase Read Throughput&lt;/strong&gt;: To scale out the number of machines that can serve read queries&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;principles-of-replication&#34;&gt;&#xA;  Principles of Replication&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#principles-of-replication&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Data Consistency&lt;/strong&gt;: Each node that stores a copy of the database is called a replica. Every write to the database needs to be processed by every replica; otherwise, the replicas would no longer contain the same data (Inconsistency).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;single-leader-mode&#34;&gt;&#xA;  Single Leader Mode&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#single-leader-mode&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;The most common solution for Data Consistency is called leader-based replication (also known as active/passive or masterâ€“slave replication)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Partition</title>
      <link>https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/partition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/partition/</guid>
      <description>&lt;h1 id=&#34;partition&#34;&gt;&#xA;  Partition&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#partition&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;In the context of databases, partitioning refers to the process of dividing a database or its elements into smaller, more manageable pieces called partitions. Each piece of data (each record, row, or document) belongs to an exact partition.&lt;/p&gt;&#xA;&lt;p&gt;The main benefit for partition is scalability. Different partitions can be placed on different nodes. Thus, a large dataset can be distributed across many disks, and the query loads can be distributed across many processors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transactions</title>
      <link>https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/transactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/distributed-system/design-data-intensive-applications/transactions/</guid>
      <description>&lt;h1 id=&#34;transaction&#34;&gt;&#xA;  Transaction&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#transaction&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;A transaction is a way for an application to group several reads and writes together into a logical unit. Either the entire transaction succeeds (commits) or it fails (aborts, rollbacks). This can eliminate partial failure&amp;ndash;i.e., the case where some operations succeed and some fail&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-meaning-of-acid&#34;&gt;&#xA;  The Meaning of ACID&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#the-meaning-of-acid&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;ACID, which stands for Atomicity, Consistency, Isolation, and Durability, are the safety guarantees provided by transactions&lt;/p&gt;&#xA;&lt;h3 id=&#34;atomicity&#34;&gt;&#xA;  Atomicity&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#atomicity&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Definition&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

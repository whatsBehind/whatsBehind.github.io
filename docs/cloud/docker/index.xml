<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>What&#39;s Behind</title>
    <link>https://whatsBehind.github.io/docs/cloud/docker/</link>
    <description>Recent content on What&#39;s Behind</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://whatsBehind.github.io/docs/cloud/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lesson 1: Start Docker</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-1-start-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-1-start-docker/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-1&#34;&gt;&#xA;  🐳 Docker Mastery Course – Lesson 1&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-introduction-what-is-docker-and-why-use-it&#34;&gt;&#xA;  💡 Introduction: What Is Docker and Why Use It?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-introduction-what-is-docker-and-why-use-it&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 1&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll discover what Docker is, why it&amp;rsquo;s valuable, and how to verify your installation by running your very first container. This is the first step in your journey to mastering Docker through a &lt;strong&gt;project-driven, hands-on approach&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-learning-objective&#34;&gt;&#xA;  🎯 Learning Objective&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-learning-objective&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you will:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 2: Docker Commands</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-2-commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-2-commands/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-2&#34;&gt;&#xA;  🐳 Docker Mastery Course – Lesson 2&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-basic-docker-commands&#34;&gt;&#xA;  💡 Basic Docker Commands&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-basic-docker-commands&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 2&lt;/strong&gt; of the Docker Mastery Course! In this session, you&amp;rsquo;ll learn how to start, stop, inspect, and remove containers using real-world examples. We&amp;rsquo;ll also use the Nginx web server to deepen your hands-on understanding of Docker&amp;rsquo;s command-line interface.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Gain confidence using essential Docker commands to manage container lifecycles and work effectively with real containers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 3: Docker Images</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-3-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-3-images/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-3&#34;&gt;&#xA;  🐳 Docker Mastery Course – Lesson 3&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-mastering-docker-images-understand-and-use-them-effectively&#34;&gt;&#xA;  🔬 Mastering Docker Images: Understand and Use Them Effectively&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-mastering-docker-images-understand-and-use-them-effectively&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 3&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll dive into the concept of Docker images — what they are, how to retrieve and inspect them, and how to run containers based on these images.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-learning-goal&#34;&gt;&#xA;  🎯 Learning Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-learning-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you will:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 4: Dockerfile</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-4-dockerfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-4-dockerfile/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-4&#34;&gt;&#xA;  🧠 Docker Mastery Course – Lesson 4&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-building-your-own-image-with-a-dockerfile&#34;&gt;&#xA;  🏗️ Building Your Own Image with a Dockerfile&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-building-your-own-image-with-a-dockerfile&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 4&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll learn how to create your own Docker image using a &lt;code&gt;Dockerfile&lt;/code&gt;, understand how file paths are interpreted during the build process, and explore the difference between shell and exec forms of the &lt;code&gt;CMD&lt;/code&gt; instruction.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you’ll be able to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 5: Docker Networking</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-5-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-5-networking/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-5&#34;&gt;&#xA;  🧰 Docker Mastery Course – Lesson 5&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-understanding-docker-networking&#34;&gt;&#xA;  📡 Understanding Docker Networking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-understanding-docker-networking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 5&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll learn how Docker networking works, how to expose container services, and how containers communicate with each other and with the outside world.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you’ll understand how to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Expose container ports to your host machine&lt;/li&gt;&#xA;&lt;li&gt;Use Docker bridge networks&lt;/li&gt;&#xA;&lt;li&gt;Connect multiple containers&lt;/li&gt;&#xA;&lt;li&gt;Resolve container names using Docker DNS&lt;/li&gt;&#xA;&lt;li&gt;Access public internet domains from within containers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-concepts&#34;&gt;&#xA;  📚 Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;what-is-docker-networking&#34;&gt;&#xA;  What Is Docker Networking?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-is-docker-networking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Docker creates virtual networks that allow containers to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 6: Docker Volumes</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-6-volumes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-6-volumes/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-6&#34;&gt;&#xA;  💾 Docker Mastery Course – Lesson 6&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-data-persistence-with-volumes-and-bind-mounts&#34;&gt;&#xA;  📦 Data Persistence with Volumes and Bind Mounts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-data-persistence-with-volumes-and-bind-mounts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 6&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll learn how to persist data in Docker containers using &lt;strong&gt;volumes&lt;/strong&gt; and &lt;strong&gt;bind mounts&lt;/strong&gt;, and understand the differences between them.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you’ll be able to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand why container data is ephemeral by default&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;volumes&lt;/strong&gt; to persist data across container lifecycles&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;bind mounts&lt;/strong&gt; to sync data between host and container&lt;/li&gt;&#xA;&lt;li&gt;Explain the differences between volumes and bind mounts clearly&lt;/li&gt;&#xA;&lt;li&gt;Understand how multiple containers can share the same volume&lt;/li&gt;&#xA;&lt;li&gt;Know how Docker handles (or doesn’t handle) concurrent writes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-concepts&#34;&gt;&#xA;  📘 Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-why-data-persistence-matters&#34;&gt;&#xA;  1. Why Data Persistence Matters&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-why-data-persistence-matters&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Docker containers are designed to be &lt;strong&gt;ephemeral&lt;/strong&gt; — meaning:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 7: Docker Compose</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-7-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-7-compose/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-7&#34;&gt;&#xA;  🧰 Docker Mastery Course – Lesson 7&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-multi-container-apps-with-docker-compose-fastapi--redis&#34;&gt;&#xA;  🧩 Multi-Container Apps with Docker Compose (FastAPI + Redis)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-multi-container-apps-with-docker-compose-fastapi--redis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 7&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll learn how to orchestrate multi-container applications using &lt;strong&gt;Docker Compose&lt;/strong&gt;, and build a working FastAPI + Redis system.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you’ll be able to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Define multiple services in a &lt;code&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;&#xA;&lt;li&gt;Understand how Compose builds images and sets up networks&lt;/li&gt;&#xA;&lt;li&gt;Run, inspect, and tear down multi-service apps&lt;/li&gt;&#xA;&lt;li&gt;Understand container-to-container networking using service names&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-concepts&#34;&gt;&#xA;  📘 Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;what-is-docker-compose&#34;&gt;&#xA;  What is Docker Compose?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-is-docker-compose&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Docker Compose is a tool for defining and running &lt;strong&gt;multi-container Docker applications&lt;/strong&gt;. It lets you:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 8: Docker Logging, Healthchecks, and Container Lifecycle</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-8-health-checks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-8-health-checks/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-8&#34;&gt;&#xA;  🩺 Docker Mastery Course – Lesson 8&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-logging-healthchecks-and-container-lifecycle&#34;&gt;&#xA;  🚦 Logging, Healthchecks, and Container Lifecycle&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-logging-healthchecks-and-container-lifecycle&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 8&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you’ll learn how to monitor and control container health and behavior using logging, healthchecks, and lifecycle management tools.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you’ll be able to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;View and interpret container logs using Docker&lt;/li&gt;&#xA;&lt;li&gt;Define and use healthchecks to monitor container health&lt;/li&gt;&#xA;&lt;li&gt;Understand and manage container lifecycle states: created, running, exited, restarting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-concepts&#34;&gt;&#xA;  📘 Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-viewing-logs&#34;&gt;&#xA;  1. Viewing Logs&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-viewing-logs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Docker captures stdout and stderr output from container processes. You can access logs with:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 9: Docker Env</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-9-env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-9-env/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-9&#34;&gt;&#xA;  🔐 Docker Mastery Course – Lesson 9&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-9&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-environment-variables-and-secrets&#34;&gt;&#xA;  🧪 Environment Variables and Secrets&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-environment-variables-and-secrets&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 9&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll learn how to inject and manage configuration settings and secrets in your containers using environment variables and &lt;code&gt;.env&lt;/code&gt; files.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you will be able to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use environment variables to configure container behavior&lt;/li&gt;&#xA;&lt;li&gt;Load configuration from &lt;code&gt;.env&lt;/code&gt; files&lt;/li&gt;&#xA;&lt;li&gt;Access environment variables inside a FastAPI application&lt;/li&gt;&#xA;&lt;li&gt;Recognize the risks of storing secrets in environment variables&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-concepts&#34;&gt;&#xA;  📘 Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-why-use-environment-variables&#34;&gt;&#xA;  1. Why Use Environment Variables?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-why-use-environment-variables&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Environment variables allow you to pass dynamic configuration into containers &lt;strong&gt;without modifying application code&lt;/strong&gt;. They&amp;rsquo;re commonly used for:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 10: Docker Multi-Stage</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-10-multi-stage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-10-multi-stage/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-10&#34;&gt;&#xA;  🚀 Docker Mastery Course – Lesson 10&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-10&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-multi-stage-builds-and-image-optimization&#34;&gt;&#xA;  🧰 Multi-Stage Builds and Image Optimization&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-multi-stage-builds-and-image-optimization&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 10&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you’ll learn how to optimize Docker images using multi-stage builds — a powerful technique for separating build-time and runtime concerns.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you’ll be able to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand what multi-stage builds are and why they matter&lt;/li&gt;&#xA;&lt;li&gt;Reduce image size and improve security&lt;/li&gt;&#xA;&lt;li&gt;Apply multi-stage techniques to your FastAPI application&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-concepts&#34;&gt;&#xA;  📘 Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-why-optimize-your-docker-images&#34;&gt;&#xA;  1. Why Optimize Your Docker Images?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-why-optimize-your-docker-images&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;A typical Dockerfile may include:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lesson 11: Docker Context &amp; `.dockerignore`</title>
      <link>https://whatsBehind.github.io/docs/cloud/docker/lesson-11-dockerignore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/cloud/docker/lesson-11-dockerignore/</guid>
      <description>&lt;h1 id=&#34;-docker-mastery-course--lesson-11&#34;&gt;&#xA;  🗂️ Docker Mastery Course – Lesson 11&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-mastery-course--lesson-11&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-build-context-and-dockerignore&#34;&gt;&#xA;  📦 Build Context and &lt;code&gt;.dockerignore&lt;/code&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-build-context-and-dockerignore&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Welcome to &lt;strong&gt;Lesson 11&lt;/strong&gt; of the Docker Mastery Course! In this lesson, you&amp;rsquo;ll learn how to use the &lt;code&gt;.dockerignore&lt;/code&gt; file to optimize the build context, improve build speed, and avoid leaking sensitive files into your Docker images.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-goal&#34;&gt;&#xA;  🎯 Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this lesson, you&amp;rsquo;ll be able to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand what Docker&amp;rsquo;s build context is and why it matters&lt;/li&gt;&#xA;&lt;li&gt;Use a &lt;code&gt;.dockerignore&lt;/code&gt; file to reduce build size and improve security&lt;/li&gt;&#xA;&lt;li&gt;Prevent unnecessary or sensitive files from being copied into Docker images&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-concepts&#34;&gt;&#xA;  📘 Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-what-is-build-context&#34;&gt;&#xA;  1. What Is Build Context?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-what-is-build-context&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;When you run:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>What&#39;s Behind</title>
    <link>https://whatsBehind.github.io/docs/programming/backend/python/</link>
    <description>Recent content on What&#39;s Behind</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://whatsBehind.github.io/docs/programming/backend/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How Is Python File Executed</title>
      <link>https://whatsBehind.github.io/docs/programming/backend/python/executing-a-python-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/programming/backend/python/executing-a-python-file/</guid>
      <description>Concepts # __name__ # __name__ is a built-in variable (attribute) of a module. It is being used to indicate if a module is being run directly or being imported into other modules&#xA;Value when module is running directly: When you run a Python module directly, __name__ of this module is set to __main__&#xA;Value when module is imported: When the module is imported into others modules, __name__ is set to the module name (file name w/o .</description>
    </item>
    <item>
      <title>RegEx</title>
      <link>https://whatsBehind.github.io/docs/programming/backend/python/re/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/programming/backend/python/re/</guid>
      <description>re in Python # re.search() # The re.search() method is used to search a string for a match to a regular expression pattern. It scans through the string from left to right and returns the FIRST match it finds. If a match is found, it returns a match object; otherwise, it returns None.&#xA;Method Signature # search(pattern: str, string: str, flags: int=0) -&amp;gt; re.Match pattern: The regular expression pattern to search for.</description>
    </item>
    <item>
      <title>format-string</title>
      <link>https://whatsBehind.github.io/docs/programming/backend/python/format-string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/programming/backend/python/format-string/</guid>
      <description>Format String in Python # f-strings # f-strings provide a concise and readable way to embed expressions inside string literals. They are prefixed with the letter f or F and use curly braces {} as placeholder for expressions&#xA;Quick Start&#xA;name = &amp;#34;Alice&amp;#34; age = 30 greeting = f&amp;#34;Hello, my name is {name} and I am {age} years old&amp;#34; print(greeting) Output&#xA;Hello, my name is Alice and I am 30 years old Usage # Expressions</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>What&#39;s Behind</title>
    <link>http://localhost:1313/docs/programming/project/</link>
    <description>Recent content on What&#39;s Behind</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Nov 2023 21:26:33 -0800</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/programming/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Online Chat</title>
      <link>http://localhost:1313/docs/programming/project/online-chat/</link>
      <pubDate>Sun, 26 Nov 2023 21:26:33 -0800</pubDate>
      <guid>http://localhost:1313/docs/programming/project/online-chat/</guid>
      <description>&lt;h2 id=&#34;demo&#34;&gt;&#xA;  Demo&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#demo&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/whatsBehind/online-chat&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;container&#34;&gt;&#xA;  &lt;div id=&#34;player-wrapper&#34; class=&#34;my-5&#34;&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;script &#xA;  type=&#34;text/javascript&#34; &#xA;  src=&#34;https://cdn.jsdelivr.net/npm/@clappr/player@latest/dist/clappr.min.js&#34;&#xA;&gt;&#xA;&lt;/script&gt;&#xA;&#xA;&lt;script&gt;&#xA;  var playerElement = document.getElementById(&#34;player-wrapper&#34;);&#xA;&#xA;  var player = new Clappr.Player({&#xA;    source: &#34;/programming/project/online-chat/demo.mp4&#34;,&#xA;    mute: true,&#xA;    height: 360,&#xA;    width: 640&#xA;  });&#xA;&#xA;  player.attachTo(playerElement);  &#xA;&lt;/script&gt;&#xA;&#xA;&lt;h2 id=&#34;high-level-architecture&#34;&gt;&#xA;  High Level Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#high-level-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This is an online chat system built with BIO (Blocking IO) Using Java. Each client has two socket connections with the server, one connection supports message push mode and another one supports message pull mode.&lt;/p&gt;&#xA;&lt;p&gt;The system now supports below features:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Login&lt;/li&gt;&#xA;&lt;li&gt;Pull online users&lt;/li&gt;&#xA;&lt;li&gt;Online chat&lt;/li&gt;&#xA;&lt;li&gt;Logoff&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Because of supports for push and pull modes, features like&lt;/p&gt;</description>
    </item>
    <item>
      <title>Node Js Auth</title>
      <link>http://localhost:1313/docs/programming/project/node-js-auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/programming/project/node-js-auth/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;&#xA;  Introduction&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introduction&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This project is for learning purpose. It is a practice of&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;how to use JWT (Json Web Token) to authenticate user&lt;/li&gt;&#xA;&lt;li&gt;login with Google using OAuth2&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;tech-stack&#34;&gt;&#xA;  Tech Stack&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tech-stack&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Express&lt;/code&gt;: Quickly start a local host&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;MongoDB/Mongoose&lt;/code&gt;: Database to store users&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;@hapi/joi&lt;/code&gt;: Package to validate parameters of objects&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;bcryptjs&lt;/code&gt;: Hash confidential information including passwords in this project&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;jsonwebtoken&lt;/code&gt;: JWT package to sign and verify a auth token&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;axios&lt;/code&gt;: Send HTTP requests&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;querystring&lt;/code&gt;: Package to parse and assembly query string in HTTP request&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;reference&#34;&gt;&#xA;  Reference&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#reference&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2jqok-WgelI&#34;&gt;Implement JWT using node.js and express&lt;/a&gt;: Very nice video which guides me step by step to build this project&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Qt3KJZ2kQk0&amp;amp;t=6s&#34;&gt;Google OAuth2 with node.js&lt;/a&gt;: Video that explains and implements OAuth2 flow from end to end&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=996OiexHze0&#34;&gt;OAuth 2.0 and OpenID Connect&lt;/a&gt;: Plain English explains the evolution of OAuth2 and OpenID Connect&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;what-is-jwt&#34;&gt;&#xA;  What Is JWT?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-is-jwt&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;A JWT (JSON Web Token) is like a compact digital note or a small piece of data that web servers and clients (like your browser or a mobile app) use to communicate secure information. It&amp;rsquo;s like a tiny, encoded message.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

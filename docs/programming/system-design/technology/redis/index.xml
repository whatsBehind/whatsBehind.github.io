<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>What&#39;s Behind</title>
    <link>https://whatsBehind.github.io/docs/programming/system-design/technology/redis/</link>
    <description>Recent content on What&#39;s Behind</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://whatsBehind.github.io/docs/programming/system-design/technology/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why Is Redis So Fast</title>
      <link>https://whatsBehind.github.io/docs/programming/system-design/technology/redis/why-is-redis-so-fast/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/programming/system-design/technology/redis/why-is-redis-so-fast/</guid>
      <description>&lt;h1 id=&#34;why-is-redis-so-fast&#34;&gt;&#xA;  Why is Redis So Fast?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#why-is-redis-so-fast&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Redis is a blazing-fast, in-memory data structure store that serves as a database, cache, and message broker. Its name stands for &amp;ldquo;Remote Dictionary Server,&amp;rdquo; and it’s an open-source project known for its speed, simplicity, and versatility.&lt;/p&gt;&#xA;&lt;p&gt;Redis achieves its incredible speed through several key design principles and optimizations:&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-in-memory-operations&#34;&gt;&#xA;  1. In-Memory Operations&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-in-memory-operations&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Unlike traditional databases that rely on disk storage, Redis stores all data in memory. Modern DRAM (Dynamic Random-Access Memory) is a type of volatile memory widely used in computers for its high speed and low latency.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data Persistence</title>
      <link>https://whatsBehind.github.io/docs/programming/system-design/technology/redis/data-presistence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://whatsBehind.github.io/docs/programming/system-design/technology/redis/data-presistence/</guid>
      <description>&lt;h1 id=&#34;redis-data-persistence&#34;&gt;&#xA;  Redis Data Persistence&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis-data-persistence&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;redis-data-persistence-how-does-it-work&#34;&gt;&#xA;  Redis Data Persistence: How Does It Work?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#redis-data-persistence-how-does-it-work&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Redis is widely known for its blazing-fast in-memory operations, but it also provides robust mechanisms for ensuring data persistence, making it suitable for a wide range of use cases. Let’s dive into how Redis achieves data persistence and ensures durability.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-snapshotting-rdb---redis-database-file&#34;&gt;&#xA;  1. Snapshotting (RDB - Redis Database File)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-snapshotting-rdb---redis-database-file&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Snapshotting is a point-in-time persistence mechanism where Redis saves the entire dataset to disk at regular intervals.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
